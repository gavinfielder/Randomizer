#include "Randomizer.h"
#include <queue>
#include <ctime>
#include <cstdlib>

//Initialize static members
Randomizer* Randomizer::sInstance = 0;

//Constructor which initializes first numbers
Randomizer::Randomizer(unsigned int count, unsigned int numbers[]) {
    for (unsigned int i = 0; i < count; i++)
        firstNumbers.push(numbers[i]);
}

//returns a random number between minimum and maximum
unsigned int Randomizer::randomBetween
        (unsigned int minimum, unsigned int maximum) {
    //If firstNumbers nonempty, return the first entry and then remove it.
    if (!(firstNumbers.empty())) {
        unsigned int toReturn = firstNumbers.front();
        firstNumbers.pop();
        return toReturn;
    }
    //Return requested random number generated by the singleton reference
    //lazy allocation of singleton instance
    if (!(sInstance)) {
        sInstance = new Randomizer();
        srand(time(0));
    }
    //Call the random number generator of the single instance
    return sInstance->generateRandom(minimum, maximum);
}

//Returns a random number from min to max
unsigned int Randomizer::generateRandom(unsigned int min, unsigned int max) {
    return (unsigned int)(rand() % (max - min + 1) + min);
}
